name: Deploy Chat Widget to S3 + CloudFront (Lexi Prod)

on:
  push:
    branches:
      - lexi-prod
    paths:
      - "**/*"

env:
  AWS_REGION: us-east-2

jobs:
  deploy-widget:
    runs-on: ubuntu-latest
    environment: lexi-prod

    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        working-directory: .

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: üîê Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: üß± Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üèóÔ∏è Build Chat Widget (iframe)
        # Make sure this builds with the iframe configuration (hashing is enabled there)
        run: npm run build:iframe

      - name: ‚òÅÔ∏è Upload with correct cache headers (single pass)
        env:
          BUCKET: ${{ vars.S3_WIDGET_BUCKET }}
          ROOT: dist/widget
        run: |
          set -e

          echo "üì∞ Upload HTML with no-store"
          aws s3 cp "$ROOT" "s3://$BUCKET" \
            --recursive \
            --exclude "*" \
            --include "*.html" \
            --metadata-directive REPLACE \
            --cache-control "no-store, no-cache, must-revalidate" \
            --content-type "text/html"

          if [ -f "$ROOT/iframe-index.html" ]; then
            echo "üßæ Copy iframe-index.html ‚Üí index.html at bucket root (no-store)"
            aws s3 cp "$ROOT/iframe-index.html" "s3://$BUCKET/index.html" \
              --metadata-directive REPLACE \
              --cache-control "no-store, no-cache, must-revalidate" \
              --content-type "text/html"
          fi

          echo "üì¶ Upload hashed static assets with long-term cache"
          aws s3 cp "$ROOT" "s3://$BUCKET" \
            --recursive \
            --exclude "*" \
            --include "*.js" \
            --include "*.css" \
            --include "*.png" \
            --include "*.jpg" \
            --include "*.jpeg" \
            --include "*.svg" \
            --include "*.ico" \
            --include "assets/*" \
            --metadata-directive REPLACE \
            --cache-control "public, max-age=31536000, immutable"

          echo "üßπ Remove orphaned files (without touching metadata)"
          aws s3 sync "$ROOT" "s3://$BUCKET" --delete \
            --exclude "*" --include "DO_NOT_MATCH_ANYTHING"

      - name: üöÄ Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ vars.CLOUDFRONT_WIDGET_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: ‚úÖ Deployment complete
        run: echo "üéâ Lexi Chat Widget deployed successfully!"
